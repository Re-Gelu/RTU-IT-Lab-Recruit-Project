# Generated by Django 4.2.1 on 2023-05-06 17:46

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import shortuuid.django_fields
import tinymce.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "events",
            "0003_remove_privateeventregistrations_private_event_user_id_unique_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="PaidEventRegistrations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shortuuid",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet="0123456789",
                        auto_created=True,
                        length=10,
                        max_length=10,
                        prefix="",
                        unique=True,
                        verbose_name="UUID записи на мероприятие",
                    ),
                ),
                (
                    "is_invitation_accepted",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Принял ли пользователь приглашение на мероприятие",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        verbose_name="Дата регистрации на мероприятие",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        verbose_name="Дата обновления регистрации на мероприятие",
                    ),
                ),
            ],
            options={
                "verbose_name": "регистрацию на платное мероприятие",
                "verbose_name_plural": "Регистрации на платные мероприятия",
            },
        ),
        migrations.CreateModel(
            name="PaidEvents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_link",
                    models.URLField(
                        auto_created=True,
                        blank=True,
                        null=True,
                        verbose_name="Ссылка на оплату",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Наименование мероприятия"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="events_images/placeholder.jpg",
                        null=True,
                        upload_to="events_images/",
                        verbose_name="Изображение для мероприятия",
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(verbose_name="Время проведения мероприятия"),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True,
                        default=datetime.timedelta(seconds=7200),
                        max_length=datetime.timedelta(days=31),
                        null=True,
                        verbose_name="Длительность мероприятия",
                    ),
                ),
                (
                    "closing_registration_date",
                    models.DateTimeField(
                        verbose_name="Время закрытия регистрации на мероприятие"
                    ),
                ),
                (
                    "short_information",
                    models.TextField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Краткая информация о мероприятии",
                    ),
                ),
                (
                    "full_information",
                    tinymce.models.HTMLField(
                        blank=True,
                        null=True,
                        verbose_name="Полная информация о мероприятии",
                    ),
                ),
                (
                    "max_visitors",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Максимум посетителей"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления мероприятия"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата обновления мероприятия"
                    ),
                ),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("CREATED", "Платеж создан"),
                            ("WAITING", "Платёж в обработке / ожидает оплаты"),
                            ("PAID", "Платёж оплачен"),
                            ("EXPIRED", "Время жизни счета истекло. Счет не оплачен."),
                            ("REJECTED", "Платёж отклонен"),
                        ],
                        default="CREATED",
                        editable=False,
                        null=True,
                        verbose_name="Статус оплаты",
                    ),
                ),
                (
                    "category_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="events.eventtypes",
                        verbose_name="Тип приватного мероприятия",
                    ),
                ),
                (
                    "venue_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="events.eventvenues",
                        verbose_name="Место проведения приватного мероприятия",
                    ),
                ),
                (
                    "visitors",
                    models.ManyToManyField(
                        blank=True,
                        through="events.PaidEventRegistrations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Зарегестрированные на приватное мероприятие пользователи",
                    ),
                ),
            ],
            options={
                "verbose_name": "платное мероприятие",
                "verbose_name_plural": "Пльаные мероприятия",
                "ordering": ("name",),
            },
        ),
        migrations.AddField(
            model_name="paideventregistrations",
            name="event_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="events.paidevents",
                verbose_name="ID платного мероприятия",
            ),
        ),
        migrations.AddField(
            model_name="paideventregistrations",
            name="inviting_user_id",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="ID приглашающего пользователя",
            ),
        ),
        migrations.AddField(
            model_name="paideventregistrations",
            name="user_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="ID пользователя",
            ),
        ),
        migrations.AddConstraint(
            model_name="paideventregistrations",
            constraint=models.UniqueConstraint(
                fields=("event_id", "user_id"), name="paid_event_user_id_unique"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="paideventregistrations",
            unique_together={("event_id", "user_id")},
        ),
    ]
